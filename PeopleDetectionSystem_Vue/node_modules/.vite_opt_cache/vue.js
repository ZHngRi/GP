import { av as initCustomFormatter, y as warn } from './common/runtime-dom.esm-bundler-e2902791.js';
export { aG as BaseTransition, aH as BaseTransitionPropsValidators, C as Comment, aI as DeprecationTypes, bA as EffectScope, aJ as ErrorCodes, aK as ErrorTypeStrings, F as Fragment, aL as KeepAlive, bB as ReactiveEffect, aM as Static, aN as Suspense, T as Teleport, a6 as Text, bC as TrackOpTypes, Z as Transition, a2 as TransitionGroup, bD as TriggerOpTypes, aw as VueElement, aO as assertNumber, aP as callWithAsyncErrorHandling, aQ as callWithErrorHandling, q as camelize, p as capitalize, a5 as cloneVNode, aR as compatUtils, j as computed, as as createApp, c as createBlock, V as createCommentVNode, t as createElementBlock, v as createElementVNode, aS as createHydrationRenderer, aT as createPropsRestProxy, aU as createRenderer, ax as createSSRApp, aa as createSlots, aV as createStaticVNode, W as createTextVNode, a as createVNode, bE as customRef, aW as defineAsyncComponent, d as defineComponent, ay as defineCustomElement, aX as defineEmits, aY as defineExpose, aZ as defineModel, a_ as defineOptions, a$ as defineProps, az as defineSSRCustomElement, b0 as defineSlots, b1 as devtools, bF as effect, an as effectScope, h as getCurrentInstance, g as getCurrentScope, b2 as getTransitionRawChildren, ad as guardReactiveProps, I as h, b3 as handleError, b4 as hasInjectionContext, aA as hydrate, av as initCustomFormatter, aB as initDirectivesForSSR, E as inject, b5 as isMemoSame, bG as isProxy, bH as isReactive, bI as isReadonly, D as isRef, b6 as isRuntimeOnly, bJ as isShallow, A as isVNode, am as markRaw, b7 as mergeDefaults, b8 as mergeModels, P as mergeProps, n as nextTick, M as normalizeClass, ac as normalizeProps, O as normalizeStyle, b9 as onActivated, J as onBeforeMount, B as onBeforeUnmount, ai as onBeforeUpdate, a7 as onDeactivated, ba as onErrorCaptured, i as onMounted, bb as onRenderTracked, bc as onRenderTriggered, b as onScopeDispose, bd as onServerPrefetch, H as onUnmounted, a1 as onUpdated, o as openBlock, be as popScopeId, K as provide, bK as proxyRefs, bf as pushScopeId, bg as queuePostFlushCb, $ as reactive, e as readonly, r as ref, bh as registerRuntimeCompiler, aq as render, a8 as renderList, L as renderSlot, ah as resolveComponent, ap as resolveDirective, U as resolveDynamicComponent, bi as resolveFilter, bj as resolveTransitionHooks, bk as setBlockTracking, bl as setDevtoolsHook, bm as setTransitionHooks, au as shallowReactive, bL as shallowReadonly, s as shallowRef, bn as ssrContextKey, bo as ssrUtils, bM as stop, X as toDisplayString, bP as toHandlerKey, al as toHandlers, ae as toRaw, _ as toRef, a0 as toRefs, bN as toValue, bp as transformVNodeArgs, bO as triggerRef, u as unref, a3 as useAttrs, aC as useCssModule, aD as useCssVars, bq as useModel, br as useSSRContext, Q as useSlots, bs as useTransitionState, af as vModelCheckbox, aE as vModelDynamic, ag as vModelRadio, aF as vModelSelect, ak as vModelText, Y as vShow, bt as version, y as warn, f as watch, w as watchEffect, bu as watchPostEffect, bv as watchSyncEffect, bw as withAsyncContext, R as withCtx, bx as withDefaults, S as withDirectives, a9 as withKeys, by as withMemo, a4 as withModifiers, bz as withScopeId } from './common/runtime-dom.esm-bundler-e2902791.js';

/**
* vue v3.4.21
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/

function initDev() {
  {
    initCustomFormatter();
  }
}

if (!!(process.env.NODE_ENV !== "production")) {
  initDev();
}
const compile = () => {
  if (!!(process.env.NODE_ENV !== "production")) {
    warn(
      `Runtime compilation is not supported in this build of Vue.` + (` Configure your bundler to alias "vue" to "vue/dist/vue.esm-bundler.js".` )
    );
  }
};

export { compile };
